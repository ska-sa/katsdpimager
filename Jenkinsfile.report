#!groovy

@Library('katsdpjenkins') _

env.BRANCH_NAME = 'imager-dev'

String workdir = 'git'
String testdir = "$workdir/tests"
katsdp.stagePrepare(python2: false, python3: true)

catchError {
    stage('Generate report') {
        katsdp.simpleNode(label: 'cuda', timeout: [time: 16, unit: 'HOURS']) {
            deleteDir()
            katsdp.unpackGit()
            katsdp.unpackVenv()
            katsdp.unpackKatsdpdockerbase()
            /* The simulation script depends on a pre-release version of
             * katpoint that is incompatible with katsdpimager. So put it
             * in a separate venv.
             */
            katsdp.virtualenv('venv-simulate', true) {
                sh('pip install -r git/simulation-requirements.txt')
                dir(testdir) {
                    sh './simulate.py'
                }
            }
            katsdp.virtualenv('venv') {
                katsdp.installRequirements('git/report-requirements.txt')
                sh 'pip install --no-deps -v ./git[report]'
                sh 'pip check'
                dir(testdir) {
                    sh './images_report.py --start-channel=2 --stop-channel=4 simple.ms report'
                    sh 'cp meerkat_antennas.txt lsm.txt simulate.py report/'
                }
            }
            publishHTML(target: [reportName: 'Test images',
                                 reportDir: "$testdir/report",
                                 reportFiles: 'index.html',
                                 keepAll: true])
            /* The working directory tends to get rather big - clean it out to
             * prevent bloating the container.
             */
            deleteDir()
        }
    }
}
katsdp.mail('bmerry@ska.ac.za')
